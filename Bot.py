#################################################
#                 created by                    #
#                     ZZS                       #
#                     SBR                       #
#################################################
import telebot
from telebot import types
from backend import db_oper

############static variables#####################
TG_api = '6723388582:AAFgzZfo9KG-UE8ZDKkxsyylwLJMAkEXms4'
admins = [818895144, 1897256227]
#################################################

bot = telebot.TeleBot(TG_api)


class Bot_inline_btns:
    def __init__(self):
        super(Bot_inline_btns, self).__init__()
        self.__markup = types.InlineKeyboardMarkup(row_width=2)

    def start_btns(self):
        btn1 = types.InlineKeyboardButton('–ñ–∞–Ω—Ä—ã', callback_data='janre')
        btn2 = types.InlineKeyboardButton('–ì–æ–¥–∞', callback_data='year')
        btn3 = types.InlineKeyboardButton('–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é', callback_data='name')
        self.__markup.add(btn1, btn2, btn3)
        return self.__markup

    def creators_btns(self):
        btn1 = types.InlineKeyboardButton('–ñ–∞–Ω—Ä—ã', callback_data='janre')
        btn2 = types.InlineKeyboardButton('–ì–æ–¥–∞', callback_data='year')
        btn3 = types.InlineKeyboardButton('–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é', callback_data='name')
        self.__markup.add(btn1, btn2, btn3)
        return self.__markup


class User_data:  ### –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å–æ —Å–ª–æ–≤–∞—Ä—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    def __init__(self):
        super(User_data, self).__init__()
        self.__online_users = {}
        self.__default_admin = [True, False, 0, [], None]  ### [is_admin, update_db_now, update_index, current_action]

    def init(self, id):  ### –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –≤–≤–æ–¥–µ /start
        default_user = [False, False, 0, [], None]
        if id not in self.__online_users.keys():
            if id in admins:
                default_user[0] = True
            self.__online_users.update({id: default_user})

    def get_players(self):
        return self.__online_users

    def update_pull(self, id, data):
        self.__online_users[id][3].append(data)

    def update_reset(self, id):
        self.__online_users[id][3].clear()
        self.__online_users[id][0:4] = self.__default_admin


class Update_msg:
    def __init__(self):
        super(Update_msg, self).__init__()
        self.__messages = ['–í–≤–µ–¥–∏—Ç–µ', '–Ω–∞–∑–≤–∞–Ω–∏–µ', '–≥–æ–¥', '–∂–∞–Ω—Ä', '–æ–ø–∏—Å–∞–Ω–∏–µ', '—Å—Å—ã–ª–∫—É', '—Ä–µ–π—Ç–∏–Ω–≥', '—Å—Ç—Ä–∞–Ω—É', '–≤—Ä–µ–º—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞', '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±–ª–æ–∂–∫—É',
                           '–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!', '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ!', '–≠—Ç–æ –Ω–µ –æ–±–ª–æ–∂–∫–∞!']

    def send_msg_update(self, bot_obj, chat_obj, stat):
        if stat < 8:
            msg = f'{self.__messages[0]} {self.__messages[stat + 1]}'
        else:
            msg = f'{self.__messages[stat + 1]}'
        bot_obj.send_message(chat_obj, msg)


class Film_msg:
    def __init__(self):
        super(Film_msg, self).__init__()
        self.__messages = ['–í–≤–µ–¥–∏—Ç–µ', '–∂–∞–Ω—Ä —Ñ–∏–ª—å–º–∞', '–≥–æ–¥ —Ñ–∏–ª—å–º–∞', '–Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞', '–§–∏–ª—å–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã', '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚úÖ']
        self.__msg_format = ['–ù–∞–∑–≤–∞–Ω–∏–µ', '–ì–æ–¥', '–ñ–∞–Ω—Ä', '–†–µ–π—Ç–∏–Ω–≥', '–°—Ç—Ä–∞–Ω–∞', '–í—Ä–µ–º—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞', '–û–ø–∏—Å–∞–Ω–∏–µ', '–°—Å—ã–ª–∫–∞']

    def send_msg_callback(self, bot_obj, chat_obj, stat):
        bot_obj.send_message(chat_id=chat_obj, text=f'{self.__messages[0]} {self.__messages[stat]}')

    def send_msg_handler(self, bot_obj, chat_obj, stat, markup_obj=None):
        if type(stat) is int:
            msg = self.__messages[stat]
        else:
            msg = stat
        bot_obj.send_message(chat_id=chat_obj, reply_markup=markup_obj, text=msg)

    def send_msg_photo(self, bot_obj, chat_obj, msg, photo, markup_obj=None):
        bot_obj.send_photo(chat_id=chat_obj, photo=photo, reply_markup=markup_obj, caption=msg)

    def get_messages(self):
        return self.__msg_format


@bot.message_handler(commands=['start', 'creators', 'update'])
def start(message):
    command = message.text.replace('/', '')
    user_ID = message.from_user.id
    user.init(user_ID)
    send = Update_msg()
    buttons = Bot_inline_btns()
    if not user.get_players()[user_ID][1]:
        if command == 'start':
            bot.reply_to(message,
                         '–ü—Ä–∏–≤–µ—Çüëã\n–Ø SearchFilmBotü§ñ - –ø–æ–º–æ–≥—É —Å –ø–æ–∏—Å–∫–æ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞!\n–ù–∞–ø–∏—à–∏—Ç–µ /creators –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞—Ç–µ–ª—è—Ö.')
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚úÖ', reply_markup=buttons.start_btns())
        elif command == 'creators':
            bot.reply_to(message, '–°–æ–∑–¥–∞—Ç–µ–ª–∏:\nzzsxd - —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –±–æ—Ç–∞.\nSBR - –±—ç–∫–µ–Ω–¥ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –±–æ—Ç–∞.')
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚úÖ', reply_markup=buttons.creators_btns())
        elif command == 'update' and user.get_players()[user_ID][0]:
            send.send_msg_update(bot, message.chat.id, user.get_players()[user_ID][2])
            user.get_players()[user_ID][1] = True
    else:
        send.send_msg_update(bot, message.chat.id, 11)


@bot.message_handler(content_types=['photo', 'video', 'voice', 'audio', 'image', 'sticker', 'text'])
def text(message):
    user_ID = message.from_user.id
    send_update = Update_msg()
    send_get = Film_msg()
    buttons = Bot_inline_btns()
    if user_ID in user.get_players():
        if message.text is None and user.get_players()[user_ID][2] != 5:
            bot.reply_to(message, 'üö´–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞üö´')
        else:
            if user.get_players()[user_ID][0] and user.get_players()[user_ID][1]:
                if user.get_players()[user_ID][2] == 5 and message.text is None:  ### –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç—Ç–∞–ø –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î
                    file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
                    downloaded_file = bot.download_file(file_info.file_path)  ### –∑–∞–≥—Ä—É–∑–∫–∞ –æ–±–ª–æ–∂–∫–∏
                    user.update_pull(user_ID,
                                     downloaded_file)  ### –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±–ª–æ–∂–∫–∏ –≤ –º–∞—Å—Å–∏–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –≤ –ë–î
                    db.db_write(user.get_players()[user_ID][3])  ### –∑–∞–ø–∏—Å—å –≤ –ë–î
                    user.update_reset(user_ID)  ### –æ—á–∏—Å—Ç–∫–∞ –º–∞—Å—Å–∏–≤–∞
                    send_update.send_msg_update(bot, message.chat.id, 6)
                elif user.get_players()[user_ID][2] == 5:  ## –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–µ —Ñ–æ—Ç–æ
                    send_update.send_msg_update(bot, message.chat.id, 8)
                else:
                    user.update_pull(user_ID, message.text)  ### –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞
                    user.get_players()[user_ID][2] += 1  ### —Å—á—ë—Ç—á–∏–∫ —ç—Ç–∞–ø–∞
                    send_update.send_msg_update(bot, message.chat.id, user.get_players()[user_ID][
                        2])  ### –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á—Ç–æ –µ–º—É –≤–≤–æ–¥–∏—Ç—å
            elif user.get_players()[user_ID][4] is not None:
                query = db.db_read(message.text, user.get_players()[user_ID][4])
                if query is not None:
                    for film in query:
                        msg = ''
                        photo = b''
                        for line in range(len(film)):
                            if line < 5:
                                msg += f'{send_get.get_messages()[line]}: {film[line]}\n'
                            else:
                                photo = film[line]
                        send_get.send_msg_photo(bot, message.chat.id, msg, photo)
                    user.get_players()[user_ID][4] = None
                    send_get.send_msg_handler(bot, message.chat.id, 5, buttons.start_btns())
                else:
                    send_get.send_msg_handler(bot, message.chat.id, 4)

@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    send = Film_msg()
    user_ID = call.message.chat.id
    user.get_players()[user_ID][4] = call.data
    if call.data == 'janre':
        send.send_msg_callback(bot, call.message.chat.id, 1)
    elif call.data == 'year':
        send.send_msg_callback(bot, call.message.chat.id, 2)
    elif call.data == 'name':
        send.send_msg_callback(bot, call.message.chat.id, 3)


user = User_data()
db = db_oper()

bot.polling(none_stop=True)

#   –æ—Å—Ç–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫—É –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ –æ–±–ª–æ–∂–∫–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
