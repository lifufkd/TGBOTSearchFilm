#################################################
#                 created by                    #
#                     ZZS                       #
#                     SBR                       #
#################################################
import telebot
from telebot import types
from backend import db_oper

############static variables#####################
TG_api = '6723388582:AAFgzZfo9KG-UE8ZDKkxsyylwLJMAkEXms4'
admins = [818895144], [1897256227]
#################################################

bot = telebot.TeleBot(TG_api)


class Bot_inline_btns:
    def __init__(self):
        super(Bot_inline_btns, self).__init__()
        self.__markup = types.InlineKeyboardMarkup(row_width=2)

    def start_btns(self):
        btn1 = types.InlineKeyboardButton('–ñ–∞–Ω—Ä—ã', callback_data='genre')
        btn2 = types.InlineKeyboardButton('–ì–æ–¥–∞', callback_data='years')
        btn3 = types.InlineKeyboardButton('–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é', callback_data='name')
        self.__markup.add(btn1, btn2, btn3)
        return self.__markup

    def creators_btns(self):
        btn1 = types.InlineKeyboardButton('–ñ–∞–Ω—Ä—ã', callback_data='genre')
        btn2 = types.InlineKeyboardButton('–ì–æ–¥–∞', callback_data='years')
        btn3 = types.InlineKeyboardButton('–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é', callback_data='name')
        self.__markup.add(btn1, btn2, btn3)
        return self.__markup


class User_data:  ### –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å–æ —Å–ª–æ–≤–∞—Ä—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    def __init__(self):
        super(User_data, self).__init__()
        self.__online_users = {}
        self.__default_admin = [True, False, 0, []]  ### [is_admin, update_db_now, update_index]

    def init(self, id):  ### –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –≤–≤–æ–¥–µ /start
        default_user = [False, False, 0, []]
        if id not in self.__online_users.keys():
            if id in admins:
                default_user[0] = True
            self.__online_users.update({id: default_user})

    def get_players(self):
        return self.__online_users

    def update_pull(self, id, data):
        self.__online_users[id][3].append(data)

    def update_reset(self, id):
        self.__online_users[id][3].clear()
        self.__online_users[id][0:4] = self.__default_admin


class Add_new_entry:
    def __init__(self):
        super(Add_new_entry, self).__init__()
        self.__massages = ['–í–≤–µ–¥–∏—Ç–µ', '–Ω–∞–∑–≤–∞–Ω–∏–µ', '–≥–æ–¥', '–∂–∞–Ω—Ä', '–æ–ø–∏—Å–∞–Ω–∏–µ', '—Å—Å—ã–ª–∫—É', '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±–ª–æ–∂–∫—É',
                           '–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!', '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ!', '–≠—Ç–æ –Ω–µ –æ–±–ª–æ–∂–∫–∞!']

    def send_msg_update(self, bot_obj, chat_obj, stat):
        if stat < 5:
            msg = f'{self.__massages[0]} {self.__massages[stat + 1]}'
        else:
            msg = f'{self.__massages[stat + 1]}'
        bot_obj.send_message(chat_obj, msg)


@bot.message_handler(commands=['start', 'creators', 'update'])
def start(message):
    command = message.text.replace('/', '')
    user_ID = message.from_user.id
    user.init(user_ID)
    send = Add_new_entry()
    if not user.get_players()[user_ID][1]:
        if command == 'start':
            buttons = Bot_inline_btns()
            bot.reply_to(message,
                         '–ü—Ä–∏–≤–µ—Çüëã\n–Ø SearchFilmBotü§ñ - –ø–æ–º–æ–≥—É —Å –ø–æ–∏—Å–∫–æ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞!\n–ù–∞–ø–∏—à–∏—Ç–µ /creators –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞—Ç–µ–ª—è—Ö.')
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚úÖ', reply_markup=buttons.start_btns())
        elif command == 'creators':
            buttons = Bot_inline_btns()
            bot.reply_to(message, '–°–æ–∑–¥–∞—Ç–µ–ª–∏:\nzzsxd - —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –±–æ—Ç–∞.\nSBR - –±—ç–∫–µ–Ω–¥ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –±–æ—Ç–∞.')
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚úÖ', reply_markup=buttons.creators_btns())
        elif command == 'update' and user.get_players()[user_ID][0]:
            send.send_msg_update(bot, message.chat.id, user.get_players()[user_ID][2])
            user.get_players()[user_ID][1] = True
    else:
        send.send_msg_update(bot, message.chat.id, 7)


@bot.message_handler(content_types=['photo', 'video', 'voice', 'audio', 'image', 'sticker', 'text'])
def text(message):
    user_ID = message.from_user.id
    send = Add_new_entry()
    if user_ID in user.get_players():
        if message.text is None and user.get_players()[user_ID][2] != 5:
            bot.reply_to(message, 'üö´–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞üö´')
        else:
            if user.get_players()[user_ID][0] and user.get_players()[user_ID][1]:
                if user.get_players()[user_ID][2] == 5 and message.text is None:  ### –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç—Ç–∞–ø –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î
                    file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
                    downloaded_file = bot.download_file(file_info.file_path)  ### –∑–∞–≥—Ä—É–∑–∫–∞ –æ–±–ª–æ–∂–∫–∏
                    user.update_pull(user_ID,
                                     downloaded_file)  ### –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±–ª–æ–∂–∫–∏ –≤ –º–∞—Å—Å–∏–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –≤ –ë–î
                    db.db_write(user.get_players()[user_ID][3])  ### –∑–∞–ø–∏—Å—å –≤ –ë–î
                    user.update_reset(user_ID)  ### –æ—á–∏—Å—Ç–∫–∞ –º–∞—Å—Å–∏–≤–∞
                    send.send_msg_update(bot, message.chat.id, 6)
                elif user.get_players()[user_ID][2] == 5:  ## –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–µ —Ñ–æ—Ç–æ
                    send.send_msg_update(bot, message.chat.id, 8)
                else:
                    user.update_pull(user_ID, message.text)  ### –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞
                    user.get_players()[user_ID][2] += 1  ### —Å—á—ë—Ç—á–∏–∫ —ç—Ç–∞–ø–∞
                    send.send_msg_update(bot, message.chat.id, user.get_players()[user_ID][
                        2])  ### –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á—Ç–æ –µ–º—É –≤–≤–æ–¥–∏—Ç—å


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    if call.data == 'genre':
        print('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: "–ñ–∞–Ω—Ä—ã"')
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∂–∞–Ω—Ä —Ñ–∏–ª—å–º–∞')

        @bot.message_handler(content_types=['text'])
        def handle_text_message(message):
            if message.chat.id == call.message.chat.id:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç, —á—Ç–æ –∏ –∏—Å—Ö–æ–¥–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
                mode = 'genre'
                result = db.db_read(message.text, mode)
                if result:
                    for film in result:
                        msg = ''
                        for i, item in enumerate(film):
                            if i != 0:
                                msg += f'{item}\n'
                        bot.send_message(chat_id=call.message.chat.id, text=msg)
                    bot.send_message(chat_id=call.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
                                     reply_markup=Bot_inline_btns().start_btns())
                else:
                    bot.send_message(chat_id=call.message.chat.id, text='–§–∏–ª—å–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')

        bot.register_next_step_handler(msg, handle_text_message)


    elif call.data == 'years':
        print('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: "–ì–æ–¥–∞"')
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ —Ñ–∏–ª—å–º–∞')

        @bot.message_handler(content_types=['text'])
        def handle_text_message(message):
            global msg
            if message.chat.id == call.message.chat.id:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç, —á—Ç–æ –∏ –∏—Å—Ö–æ–¥–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
                mode = 'years'
                result = db.db_read(message.text, mode)
                if result:
                    for film in result:
                        msg = ''
                        for i, item in enumerate(film):
                            if i != 0:
                                msg += f'{item}\n'
                        bot.send_message(chat_id=call.message.chat.id, text=msg)
                    bot.send_message(chat_id=call.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
                                     reply_markup=Bot_inline_btns().start_btns())
                else:
                    bot.send_message(chat_id=call.message.chat.id, text='–§–∏–ª—å–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
            bot.register_next_step_handler(msg, handle_text_message)


    elif call.data == 'name':
        print('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: "–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"')
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞')

        @bot.message_handler(content_types=['text'])
        def handle_text_message(message):
            global msg
            if message.chat.id == call.message.chat.id:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç, —á—Ç–æ –∏ –∏—Å—Ö–æ–¥–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
                mode = 'name'
                result = db.db_read(message.text, mode)
                if result:
                    for film in result:
                        msg = ''
                        for i, item in enumerate(film):
                            if i != 0:
                                msg += f'{item}\n'
                        bot.send_message(chat_id=call.message.chat.id, text=msg)
                    bot.send_message(chat_id=call.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
                                     reply_markup=Bot_inline_btns().start_btns())
                else:
                    bot.send_message(chat_id=call.message.chat.id, text='–§–∏–ª—å–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
            bot.register_next_step_handler(msg, handle_text_message)


user = User_data()
db = db_oper()

bot.polling(none_stop=True)

#   –≤–æ–æ–±—â–µ–º, –≤ callback –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Ç–æ–¥–∞ –¥–æ–±–∞–≤—å –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ db.db_read(data, mode)
#   data - —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, mode - —ç—Ç–æ —Ä–µ–∂–∏–º —Ç.–µ –∂–∞–Ω—Ä, –≥–æ–¥ –∏ —Ç.–¥
#   —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ —Å–ª—É—á–∞–µ –Ω–∞–ª–∏—á–∏—è –≤–µ—Ä–Ω—ë—Ç 2D –º–∞—Å—Å–∏–≤ (–ø—Ä–æ—á–∏—Ç–∞–π —á—Ç–æ —ç—Ç–æ)
#   –≤ —Ü–∏–∫–ª–µ –¥–ª—è —ç—Ç–æ–≥–æ 2D –º–∞—Å—Å–∏–≤–∞ –≤—ã–≤–æ–¥–∏ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–æ–¥–Ω–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Ü–∏–∫–ª–∞ - –æ–¥–∏–Ω —Ñ–∏–ª—å–º)
#   –≤ —ç—Ç–æ–º –º–∞—Å—Å–∏–≤–µ –µ—Å—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è (–æ–±–ª–æ–∂–∫–∞) –Ω–∞–π–¥–∏ —Å–ø–æ—Å–æ–± –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ —Å–æ–æ–±—à–µ–Ω–∏–µ
